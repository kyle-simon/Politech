# Generated by Django 2.2 on 2019-04-22 17:06

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Adjacency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AdjacencyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Demographic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contains_representative', models.BooleanField(blank=True, null=True)),
                ('year', models.DateField()),
                ('total_population', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DemographicType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=2)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ElectionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('election_year', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='PoliticalParty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VoteCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_votes', models.IntegerField()),
                ('election_result', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ElectionResult')),
                ('political_party', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.PoliticalParty')),
            ],
        ),
        migrations.CreateModel(
            name='Precinct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precinct_shape', django.contrib.gis.db.models.fields.MultiPolygonField(geography=True, srid=4326)),
                ('state', models.CharField(max_length=2)),
                ('description', models.CharField(max_length=200)),
                ('adjacencies', models.ManyToManyField(related_name='_precinct_adjacencies_+', through='api.Adjacency', to='api.Precinct')),
            ],
            options={
                'index_together': {('state', 'description')},
            },
        ),
        migrations.AddField(
            model_name='electionresult',
            name='precinct',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Precinct'),
        ),
        migrations.AddField(
            model_name='electionresult',
            name='votes',
            field=models.ManyToManyField(related_name='vote_counts', through='api.VoteCount', to='api.PoliticalParty'),
        ),
        migrations.CreateModel(
            name='EconomicData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gdp_per_capita', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('median_income', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('year', models.DateField()),
                ('precinct', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Precinct')),
            ],
        ),
        migrations.CreateModel(
            name='DistrictMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_year', models.DateField()),
                ('to_year', models.DateField(blank=True, null=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.District')),
                ('precinct', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Precinct')),
            ],
            options={
                'index_together': {('district', 'precinct', 'from_year')},
            },
        ),
        migrations.AddField(
            model_name='district',
            name='precincts',
            field=models.ManyToManyField(through='api.DistrictMembership', to='api.Precinct'),
        ),
        migrations.CreateModel(
            name='DemographicTypePopulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('population', models.IntegerField()),
                ('demographic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Demographic')),
                ('demographic_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.DemographicType')),
            ],
            options={
                'index_together': {('demographic', 'demographic_type')},
            },
        ),
        migrations.AddField(
            model_name='demographic',
            name='demographic_types',
            field=models.ManyToManyField(through='api.DemographicTypePopulation', to='api.DemographicType'),
        ),
        migrations.AddField(
            model_name='demographic',
            name='precinct',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Precinct'),
        ),
        migrations.AddField(
            model_name='adjacency',
            name='adjacency_types',
            field=models.ManyToManyField(to='api.AdjacencyType'),
        ),
        migrations.AddField(
            model_name='adjacency',
            name='from_precinct',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_precincts', to='api.Precinct'),
        ),
        migrations.AddField(
            model_name='adjacency',
            name='to_precinct',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_precincts', to='api.Precinct'),
        ),
        migrations.AlterIndexTogether(
            name='electionresult',
            index_together={('precinct', 'election_year')},
        ),
        migrations.AlterIndexTogether(
            name='demographic',
            index_together={('precinct', 'year')},
        ),
        migrations.AlterIndexTogether(
            name='adjacency',
            index_together={('from_precinct', 'to_precinct')},
        ),
    ]
